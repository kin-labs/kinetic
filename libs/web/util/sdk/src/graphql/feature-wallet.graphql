fragment WalletDetails on Wallet {
  id
  createdAt
  updatedAt
  publicKey
  type
}

fragment WalletAirdropResponseDetails on WalletAirdropResponse {
  signature
}

mutation AdminDeleteWallet($walletId: String!) {
  deleted: adminDeleteWallet(walletId: $walletId) {
    ...WalletDetails
  }
}

query AdminWallet($walletId: String!) {
  item: adminWallet(walletId: $walletId) {
    ...WalletDetails
    appEnvs {
      ...AppEnvDetails
    }
    owner {
      ...UserDetails
    }
  }
}

query AdminWallets {
  items: adminWallets {
    ...WalletDetails
    appEnvs {
      ...AppEnvDetails
    }
    owner {
      ...UserDetails
    }
  }
}

mutation UserGenerateWallet($appEnvId: String!) {
  generated: userGenerateWallet(appEnvId: $appEnvId) {
    ...WalletDetails
    appEnvs {
      ...AppEnvDetails
    }
  }
}

mutation UserImportWallet($appEnvId: String!, $secret: String!) {
  generated: userImportWallet(appEnvId: $appEnvId, secret: $secret) {
    ...WalletDetails
  }
}

mutation UserDeleteWallet($appEnvId: String!, $walletId: String!) {
  deleted: userDeleteWallet(appEnvId: $appEnvId, walletId: $walletId) {
    ...WalletDetails
  }
}

query UserWallet($appEnvId: String!, $walletId: String!) {
  item: userWallet(appEnvId: $appEnvId, walletId: $walletId) {
    ...WalletDetails
    appMints {
      ...AppMintDetails
    }
  }
}

query UserWalletAirdrop($appEnvId: String!, $walletId: String!, $amount: Float!) {
  response: userWalletAirdrop(appEnvId: $appEnvId, walletId: $walletId, amount: $amount) {
    ...WalletAirdropResponseDetails
  }
}

query UserWalletBalance($appEnvId: String!, $walletId: String!) {
  balance: userWalletBalance(appEnvId: $appEnvId, walletId: $walletId)
}

query UserWallets($appEnvId: String!) {
  items: userWallets(appEnvId: $appEnvId) {
    ...WalletDetails
    appMints {
      ...AppMintDetails
    }
  }
}
