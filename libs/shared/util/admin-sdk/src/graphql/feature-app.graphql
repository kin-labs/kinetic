fragment AppDetails on App {
  id
  createdAt
  updatedAt
  index
  name
}

fragment AppUserDetails on AppUser {
  id
  createdAt
  updatedAt
  role
  user {
    ...UserDetails
  }
}

mutation CreateApp($input: AppCreateInput!) {
  created: createApp(input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
    wallet {
      ...WalletDetails
    }
  }
}

mutation DeleteApp($appId: String!) {
  deleted: deleteApp(appId: $appId) {
    ...AppDetails
  }
}

mutation UpdateApp($appId: String!, $input: AppUpdateInput!) {
  updated: updateApp(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
    wallet {
      ...WalletDetails
    }
  }
}

mutation AppUserAdd($appId: String!, $input: AppUserAddInput!) {
  item: appUserAdd(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
  }
}

mutation AppUserRemove($appId: String!, $input: AppUserRemoveInput!) {
  item: appUserRemove(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
  }
}

mutation AppUserUpdateRole($appId: String!, $input: AppUserUpdateRoleInput!) {
  item: appUserUpdateRole(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
  }
}

mutation AppWalletAdd($appId: String!, $walletId: String!) {
  item: appWalletAdd(appId: $appId, walletId: $walletId) {
    ...AppDetails
    wallet {
      ...WalletDetails
    }
  }
}

mutation AppWalletRemove($appId: String!, $walletId: String!) {
  item: appWalletRemove(appId: $appId, walletId: $walletId) {
    ...AppDetails
    wallet {
      ...WalletDetails
    }
  }
}

query App($appId: String!) {
  item: app(appId: $appId) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
    wallet {
      ...WalletDetails
    }
  }
}

query Apps {
  items: apps {
    ...AppDetails
    wallet {
      ...WalletDetails
    }
  }
}
