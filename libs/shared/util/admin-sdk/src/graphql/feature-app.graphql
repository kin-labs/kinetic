fragment AppDetails on App {
  id
  createdAt
  updatedAt
  index
  name
}

fragment AppEnvDetails on AppEnv {
  id
  createdAt
  updatedAt
  app {
    id
    createdAt
    updatedAt
    index
    name
  }
  cluster {
    ...ClusterDetails
  }
  mints {
    ...AppMintDetails
  }
  name
  webhookAcceptIncoming
  webhookEventEnabled
  webhookEventUrl
  webhookSecret
  webhookVerifyEnabled
  webhookVerifyUrl
}

fragment AppMintDetails on AppMint {
  id
  createdAt
  updatedAt
  mint {
    ...MintDetails
  }
  wallet {
    ...WalletDetails
  }
}

fragment AppTransactionDetails on AppTransaction {
  id
  createdAt
  updatedAt
  amount
  destination
  errors {
    ...AppTransactionErrorDetails
  }
  feePayer
  mint
  processingDuration
  referenceId
  referenceType
  signature
  solanaCommittedDuration
  solanaFinalized
  solanaFinalizedDuration
  solanaCommitted
  solanaStart
  solanaTransaction
  source
  status
  totalDuration
  webhookEventDuration
  webhookEventEnd
  webhookEventStart
  webhookVerifyDuration
  webhookVerifyEnd
  webhookVerifyStart
}

fragment AppTransactionErrorDetails on AppTransactionError {
  id
  message
  type
  instruction
}

fragment AppUserDetails on AppUser {
  id
  createdAt
  updatedAt
  role
  app {
    ...AppDetails
  }
  user {
    ...UserDetails
  }
}

fragment AppWebhookDetails on AppWebhook {
  id
  createdAt
  updatedAt
  direction
  headers
  payload
  responseError
  responsePayload
  responseStatus
  type
}

mutation CreateApp($input: AppCreateInput!) {
  created: createApp(input: $input) {
    ...AppDetails
    envs {
      ...AppEnvDetails
      wallets {
        ...WalletDetails
      }
    }
    users {
      ...AppUserDetails
    }
  }
}

mutation DeleteApp($appId: String!) {
  deleted: deleteApp(appId: $appId) {
    ...AppDetails
  }
}

mutation UpdateApp($appId: String!, $input: AppUpdateInput!) {
  updated: updateApp(appId: $appId, input: $input) {
    ...AppDetails
    envs {
      ...AppEnvDetails
      wallets {
        ...WalletDetails
      }
    }
    users {
      ...AppUserDetails
    }
  }
}

mutation UpdateAppEnv($appId: String!, $appEnvId: String!, $input: AppEnvUpdateInput!) {
  updated: updateAppEnv(appId: $appId, appEnvId: $appEnvId, input: $input) {
    ...AppEnvDetails
    wallets {
      ...WalletDetails
    }
  }
}

mutation AppUserAdd($appId: String!, $input: AppUserAddInput!) {
  item: appUserAdd(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
  }
}

mutation AppUserRemove($appId: String!, $input: AppUserRemoveInput!) {
  item: appUserRemove(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
  }
}

mutation AppUserUpdateRole($appId: String!, $input: AppUserUpdateRoleInput!) {
  item: appUserUpdateRole(appId: $appId, input: $input) {
    ...AppDetails
    users {
      ...AppUserDetails
    }
  }
}

mutation AppEnvWalletAdd($appId: String!, $appEnvId: String!, $walletId: String!) {
  item: appEnvWalletAdd(appId: $appId, appEnvId: $appEnvId, walletId: $walletId) {
    ...AppEnvDetails
    wallets {
      ...WalletDetails
    }
  }
}

mutation AppEnvWalletRemove($appId: String!, $appEnvId: String!, $walletId: String!) {
  item: appEnvWalletRemove(appId: $appId, appEnvId: $appEnvId, walletId: $walletId) {
    ...AppEnvDetails
    wallets {
      ...WalletDetails
    }
  }
}

query App($appId: String!) {
  item: app(appId: $appId) {
    ...AppDetails
    envs {
      ...AppEnvDetails
      wallets {
        ...WalletDetails
      }
    }
    users {
      ...AppUserDetails
    }
  }
}

query AppEnv($appId: String!, $appEnvId: String!) {
  item: appEnv(appId: $appId, appEnvId: $appEnvId) {
    ...AppEnvDetails
    wallets {
      ...WalletDetails
    }
  }
}

query AppTransaction($appId: String!, $appEnvId: String!, $appTransactionId: String!) {
  item: appTransaction(appId: $appId, appEnvId: $appEnvId, appTransactionId: $appTransactionId) {
    ...AppTransactionDetails
  }
}

query AppTransactions($appId: String!, $appEnvId: String!) {
  items: appTransactions(appId: $appId, appEnvId: $appEnvId) {
    ...AppTransactionDetails
  }
}

query AppWebhook($appId: String!, $appWebhookId: String!) {
  item: appWebhook(appId: $appId, appWebhookId: $appWebhookId) {
    ...AppWebhookDetails
  }
}

query AppWebhooks($appId: String!, $appEnvId: String!) {
  items: appWebhooks(appId: $appId, appEnvId: $appEnvId) {
    ...AppWebhookDetails
  }
}

query Apps {
  items: apps {
    ...AppDetails
    envs {
      ...AppEnvDetails
    }
  }
}
