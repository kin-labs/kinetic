# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type App {
  createdAt: DateTime!
  id: String!
  index: Int!
  name: String
  updatedAt: DateTime!
  users: [AppUser!]
  wallet: Wallet
}

input AppCreateInput {
  index: Int!
  name: String!
  skipWalletCreation: Boolean
}

input AppUpdateInput {
  name: String
}

type AppUser {
  createdAt: DateTime!
  id: String!
  role: AppUserRole!
  updatedAt: DateTime!
  user: User
}

input AppUserAddInput {
  role: AppUserRole!
  userId: String!
}

input AppUserRemoveInput {
  userId: String!
}

enum AppUserRole {
  Member
  Owner
}

input AppUserUpdateRoleInput {
  role: AppUserRole!
  userId: String!
}

type AuthToken {
  token: String!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  appUserAdd(appId: String!, input: AppUserAddInput!): App
  appUserRemove(appId: String!, input: AppUserRemoveInput!): App
  appUserUpdateRole(appId: String!, input: AppUserUpdateRoleInput!): App
  appWalletAdd(appId: String!, walletId: String!): App
  appWalletRemove(appId: String!, walletId: String!): App
  createApp(input: AppCreateInput!): App
  createUser(input: UserCreateInput!): User
  deleteApp(appId: String!): App
  deleteUser(userId: String!): User
  deleteWallet(walletId: String!): Wallet
  generateWallet: Wallet
  login(input: LoginInput!): AuthToken
  logout: Boolean
  updateApp(appId: String!, input: AppUpdateInput!): App
  updateUser(input: UserUpdateInput!, userId: String!): User
}

type Query {
  app(appId: String!): App
  apps: [App!]
  me: User
  uptime: Float!
  user(userId: String!): User
  users: [User!]
  wallet(walletId: String!): Wallet
  wallets: [Wallet!]
}

type User {
  avatarUrl: String
  createdAt: DateTime!
  email: String
  emails: [UserEmail!]
  id: String!
  name: String
  role: UserRole
  updatedAt: DateTime!
  username: String!
}

input UserCreateInput {
  avatarUrl: String
  email: String!
  name: String
  password: String!
  role: UserRole
  username: String
}

type UserEmail {
  createdAt: DateTime!
  email: String!
  id: String!
  updatedAt: DateTime!
}

enum UserRole {
  Admin
  User
}

input UserUpdateInput {
  avatarUrl: String
  name: String
  role: UserRole
}

type Wallet {
  createdAt: DateTime!
  id: String!
  publicKey: String
  updatedAt: DateTime!
}
