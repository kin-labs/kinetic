name: build-test

on:
  pull_request:
  push:
    branches:
      - dev
      - main

env:
  ADMIN_EMAIL: 'mogami@kin.org'
  ADMIN_PASSWORD: 'Mogami@dmin1'
  COOKIE_DOMAIN: 'localhost'
  COOKIE_NAME: '__session'
  DATABASE_URL: 'postgresql://prisma:prisma@localhost:5432/prisma?schema=mogami'
  JWT_SECRET: 'MogamiJwtSecret!'
  MOGAMI_MINT_DECIMALS: 5
  MOGAMI_MINT_PUBLIC_KEY: 'KinDesK3dYWo3R2wDk6Ucaf31tvQCCSYyL8Fuqp33GX'
  MOGAMI_SUBSIDIZER_SECRET_KEY: '[155,252,122,114,97,197,108,234,140,3,107,199,138,221,65,69,142,81,202,134,41,125,12,24,87,224,89,114,153,146,138,12,5,84,102,38,7,100,200,251,34,72,143,134,254,202,250,134,208,29,170,161,12,132,240,98,16,241,4,69,193,117,148,215]'
  NX_CLOUD_DISTRIBUTED_EXECUTION: false
  SOLANA_RPC_ENDPOINT: 'http://localhost:8899'

jobs:
  main:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: yarn install --frozen-lockfile
      - run: yarn format:check
      - run: yarn build
      # - run: yarn nx-cloud start-ci-run
      - run: yarn cypress install
      - run: yarn prisma db push
      - run: yarn nx affected --target=e2e --parallel --max-parallel=3
      - run: yarn nx affected --target=build --parallel --max-parallel=3
      - run: yarn nx affected --target=lint --parallel --max-parallel=3
      - run: yarn nx affected --target=test --parallel --max-parallel=2
      # - run: yarn nx-cloud stop-all-agents
  pr:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'pull_request' }}
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: prisma
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      solana:
        image: solanalabs/solana:v1.9.9
        ports: ['8899:8899', '8900:8900']
        options: --entrypoint="solana-test-validator"
    steps:
      - uses: actions/checkout@v2
        name: Checkout pr
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: yarn install --frozen-lockfile
      - run: yarn format:check
      - run: yarn build
      # - run: yarn nx-cloud start-ci-run
      - run: yarn cypress install
      - run: yarn prisma db push
      - run: yarn nx affected --target=e2e --parallel --max-parallel=3
      - run: yarn nx affected --target=build --parallel --max-parallel=3
      - run: yarn nx affected --target=lint --parallel --max-parallel=3
      - run: yarn nx affected --target=test --parallel --max-parallel=2
      # - run: yarn nx-cloud stop-all-agents
#  agents:
#    runs-on: ubuntu-20.04
#    name: Agent 1
#    timeout-minutes: 60
#    services:
#      postgres:
#        image: postgres:12
#        env:
#          POSTGRES_DB: prisma
#          POSTGRES_USER: prisma
#          POSTGRES_PASSWORD: prisma
#        ports: ['5432:5432']
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#      solana:
#        image: solanalabs/solana:v1.9.9
#        ports: ['8899:8899', '8900:8900']
#        options: --entrypoint="solana-test-validator"
#    strategy:
#      matrix:
#        agent: [1, 2, 3]
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
#      - uses: actions/setup-node@v1
#        with:
#          node-version: '14'
#      - run: yarn install --frozen-lockfile
#      - run: yarn build
#      - name: Start Nx Agent ${{ matrix.agent }}
#        run: yarn nx-cloud start-agent
