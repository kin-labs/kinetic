{
  "openapi": "3.0.0",
  "paths": {
    "/api/metrics": {
      "get": {
        "operationId": "ApiCoreFeatureController_metrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/uptime": {
      "get": {
        "operationId": "ApiCoreFeatureController_uptime",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account/info/{environment}/{index}/{accountId}": {
      "get": {
        "operationId": "ApiAccountFeatureController_getAccountInfo",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["account"]
      }
    },
    "/api/account/create": {
      "post": {
        "operationId": "createAccount",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTransaction"
                }
              }
            }
          }
        },
        "tags": ["account"]
      }
    },
    "/api/account/balance/{environment}/{index}/{accountId}": {
      "get": {
        "operationId": "getBalance",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          }
        },
        "tags": ["account"]
      }
    },
    "/api/account/history/{environment}/{index}/{accountId}": {
      "get": {
        "operationId": "getHistory",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": ["account"]
      }
    },
    "/api/account/token-accounts/{environment}/{index}/{accountId}": {
      "get": {
        "operationId": "tokenAccounts",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["account"]
      }
    },
    "/api/airdrop": {
      "post": {
        "operationId": "requestAirdrop",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAirdropRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestAirdropResponse"
                }
              }
            }
          }
        },
        "tags": ["airdrop"]
      }
    },
    "/api/airdrop/stats": {
      "get": {
        "operationId": "airdropStats",
        "summary": "",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirdropStats"
                }
              }
            }
          }
        },
        "tags": ["airdrop"]
      }
    },
    "/api/app/{environment}/{index}/config": {
      "get": {
        "operationId": "getAppConfig",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfig"
                }
              }
            }
          }
        },
        "tags": ["app"]
      }
    },
    "/api/app/{environment}/{index}/health": {
      "get": {
        "operationId": "getAppHealth",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppHealth"
                }
              }
            }
          }
        },
        "tags": ["app"]
      }
    },
    "/api/app/{environment}/{index}/webhook/{type}": {
      "post": {
        "operationId": "ApiAppFeatureController_appWebhook",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["app"]
      }
    },
    "/api/config": {
      "get": {
        "operationId": "config",
        "summary": "",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConfigSummary"
                }
              }
            }
          }
        },
        "tags": ["config"]
      }
    },
    "/api/transaction/latest-blockhash/{environment}/{index}": {
      "get": {
        "operationId": "getLatestBlockhash",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestBlockhashResponse"
                }
              }
            }
          }
        },
        "tags": ["transaction"]
      }
    },
    "/api/transaction/minimum-rent-exemption-balance/{environment}/{index}": {
      "get": {
        "operationId": "getMinimumRentExemptionBalance",
        "summary": "",
        "parameters": [
          {
            "name": "environment",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dataLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinimumRentExemptionBalanceResponse"
                }
              }
            }
          }
        },
        "tags": ["transaction"]
      }
    },
    "/api/transaction/make-transfer": {
      "post": {
        "operationId": "makeTransfer",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakeTransferRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTransaction"
                }
              }
            }
          }
        },
        "tags": ["transaction"]
      }
    }
  },
  "info": {
    "title": "Kinetic",
    "description": "The OpenAPI definition of the Kinetic API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "kinetic",
      "description": ""
    }
  ],
  "servers": [
    {
      "url": "https://devnet.kinetic.kin.org"
    },
    {
      "url": "https://mainnet.kinetic.kin.org"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "Buffer": {
        "type": "object",
        "properties": {}
      },
      "CreateAccountRequest": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string"
          },
          "index": {
            "type": "number"
          },
          "mint": {
            "type": "string"
          },
          "tx": {
            "$ref": "#/components/schemas/Buffer"
          }
        },
        "required": ["environment", "index", "mint", "tx"]
      },
      "AppTransactionError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "object"
          }
        },
        "required": ["id", "message", "type"]
      },
      "AppTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppTransactionError"
            }
          },
          "explorerUrl": {
            "type": "string",
            "nullable": true
          },
          "feePayer": {
            "type": "string",
            "nullable": true
          },
          "mint": {
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "solanaFinalized": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "solanaCommitted": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "solanaStart": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "solanaTransaction": {
            "type": "object",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "object",
            "nullable": true
          },
          "webhookEventStart": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "webhookEventEnd": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "webhookVerifyStart": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "webhookVerifyEnd": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "amount",
          "destination",
          "errors",
          "explorerUrl",
          "feePayer",
          "mint",
          "referenceId",
          "referenceType",
          "signature",
          "solanaFinalized",
          "solanaCommitted",
          "solanaStart",
          "solanaTransaction",
          "source",
          "status",
          "webhookEventStart",
          "webhookEventEnd",
          "webhookVerifyStart",
          "webhookVerifyEnd"
        ]
      },
      "BigNumber": {
        "type": "object",
        "properties": {}
      },
      "BalanceToken": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "balance": {
            "$ref": "#/components/schemas/BigNumber"
          },
          "mint": {
            "type": "string"
          }
        },
        "required": ["account", "balance", "mint"]
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "$ref": "#/components/schemas/BigNumber"
          },
          "mints": {
            "type": "object"
          },
          "tokens": {
            "$ref": "#/components/schemas/BalanceToken"
          }
        },
        "required": ["balance", "mints", "tokens"]
      },
      "HistoryResponse": {
        "type": "object",
        "properties": {
          "account": {
            "type": "object"
          },
          "history": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["account", "history"]
      },
      "RequestAirdropRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "index": {
            "type": "number"
          },
          "mint": {
            "type": "string"
          }
        },
        "required": ["account", "environment", "index", "mint"]
      },
      "RequestAirdropResponse": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          }
        },
        "required": ["signature"]
      },
      "AirdropStatsCounts": {
        "type": "object",
        "properties": {
          "averageValue": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "totalValue": {
            "type": "number"
          }
        },
        "required": ["averageValue", "total", "totalValue"]
      },
      "AirdropStatsDate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "count": {
            "type": "number"
          }
        },
        "required": ["date", "count"]
      },
      "AirdropStats": {
        "type": "object",
        "properties": {
          "counts": {
            "$ref": "#/components/schemas/AirdropStatsCounts"
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirdropStatsDate"
            }
          }
        },
        "required": ["counts", "dates"]
      },
      "AppConfigApp": {
        "type": "object",
        "properties": {
          "index": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["index", "name"]
      },
      "AppConfigCluster": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "object"
          }
        },
        "required": ["id", "name", "type"]
      },
      "AppConfigEnvironment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cluster": {
            "$ref": "#/components/schemas/AppConfigCluster"
          }
        },
        "required": ["name", "cluster"]
      },
      "AppConfigMint": {
        "type": "object",
        "properties": {
          "airdrop": {
            "type": "boolean"
          },
          "airdropAmount": {
            "type": "number"
          },
          "airdropMax": {
            "type": "number"
          },
          "feePayer": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "programId": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "airdrop",
          "airdropAmount",
          "airdropMax",
          "feePayer",
          "logoUrl",
          "programId",
          "publicKey",
          "symbol"
        ]
      },
      "AppConfig": {
        "type": "object",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/AppConfigApp"
          },
          "environment": {
            "$ref": "#/components/schemas/AppConfigEnvironment"
          },
          "mint": {
            "$ref": "#/components/schemas/AppConfigMint"
          },
          "mints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppConfigMint"
            }
          }
        },
        "required": ["app", "environment", "mint", "mints"]
      },
      "AppHealth": {
        "type": "object",
        "properties": {
          "isSolanaOk": {
            "type": "boolean"
          },
          "isKineticOk": {
            "type": "boolean"
          },
          "time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["isSolanaOk", "isKineticOk", "time"]
      },
      "ApiConfigSummary": {
        "type": "object",
        "properties": {
          "port": {
            "type": "number"
          },
          "environment": {
            "type": "string"
          }
        },
        "required": ["port", "environment"]
      },
      "LatestBlockhashResponse": {
        "type": "object",
        "properties": {
          "blockhash": {
            "type": "string"
          },
          "lastValidBlockHeight": {
            "type": "number"
          }
        },
        "required": ["blockhash", "lastValidBlockHeight"]
      },
      "MinimumRentExemptionBalanceResponse": {
        "type": "object",
        "properties": {
          "lamports": {
            "type": "number"
          }
        },
        "required": ["lamports"]
      },
      "Uint8Array": {
        "type": "object",
        "properties": {}
      },
      "MakeTransferRequest": {
        "type": "object",
        "properties": {
          "commitment": {
            "type": "string",
            "enum": ["Confirmed", "Finalized", "Processed"]
          },
          "environment": {
            "type": "string"
          },
          "index": {
            "type": "number"
          },
          "mint": {
            "type": "string"
          },
          "lastValidBlockHeight": {
            "type": "number"
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "tx": {
            "$ref": "#/components/schemas/Uint8Array"
          }
        },
        "required": [
          "commitment",
          "environment",
          "index",
          "mint",
          "lastValidBlockHeight",
          "referenceId",
          "referenceType",
          "tx"
        ]
      }
    }
  }
}
